email.host=localhost
email.port=25
spring.sleuth.sampler.percentage=1.0
spring.application.name= portal
server.context-path=/jport
server.port=80
logging.level.org.springframework=INFO
logging.level.com.troika=DEBUG
logging.level.org.springframework.web=ERROR
# Logging pattern for the console
logging.pattern.console= "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
# Logging pattern for file
logging.pattern.file= "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
logging.file=c:/logs/personal/jobportal.log
logging.level.org.apache.cxf=INFO
logging.level.org.springframwork.integration=DEBUG
spring.cache.ehcache.provider=net.sf.ehcache.CacheManager
spring.cache.ehcache.config=classpath:config/another-config.xml

#server.port: 8443
#server.ssl.key-store: C:\\keytool\\keystore.p12
#server.ssl.key-store-password: doitfast
#server.ssl.keyStoreType: PKCS12
#server.ssl.keyAlias: tomcat

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://127.0.0.1:3306/test?useSSL=false

# Username and password
spring.datasource.username =root
spring.datasource.password =root

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

linkServiceUrl=http://52.66.144.149/jport/update/pCode/